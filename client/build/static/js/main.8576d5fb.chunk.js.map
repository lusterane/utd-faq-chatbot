{"version":3,"sources":["components/Home/ShowQueryCard/ShowQueryCard.jsx","components/Home/ChatbotComp/QuestionComponent/QuestionComponent.jsx","components/Home/ChatbotComp/ChatbotComp.jsx","components/TriggerComponents/TriggerYesQuestion.jsx","components/Home/UserModel/UserModel.jsx","components/Home/CurrentScrapedSites/CurrentScrapedSites.jsx","components/Home/RecentlyAsked/RecentlyAsked.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowQueryCard","state","currentCosinSim","currentQuestion","currentAnswer","index","showAnswer","answeredQuestion","toggleShowAnswer","setState","handleAnsweredQuestion","props","handleIndexIncrement","questions","response","length","updateCurrentQuestion","handleIndexDecrement","this","className","onClick","icon","faChevronLeft","faChevronRight","Button","variant","Component","QuestionComponent","isLoaded","updateUserModel","steps","name","type","question","handleName","message","handleUserType","faqQuestion","faqAnswer","handleQuestionsAnswered","postRecentlyAsked","getIntentsFromDB","console","log","endpoint","process","fetch","method","then","res","json","body","user","userType","questionData","userQuestion","headers","Accept","JSON","stringify","result","parse","localStorage","setItem","status","error","data","Spinner","animation","role","ChatBotComp","width","id","trigger","component","updateQuestions","delay","options","value","label","end","UserModel","CurrentScrapedSites","refreshComponent","faSyncAlt","href","RecentlyAsked","showStudent","showFaculty","showRefresh","refreshTime","toggleShowStudent","toggleShowFaculty","getRecentlyAsked","Date","date","faculty","student","toString","Home","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2dAyIeA,G,kNA5HdC,MAAQ,CACPC,gBAAiB,GACjBC,gBAAiB,GACjBC,cAAe,GACfC,MAAO,EACPC,YAAY,EACZC,kBAAkB,G,EAOnBC,iBAAmB,WAClB,EAAKC,SAAS,CAAEH,YAAa,EAAKL,MAAMK,c,EAGzCI,uBAAyB,WAAO,IAAD,EACa,EAAKT,MAAxCE,EADsB,EACtBA,gBAAiBC,EADK,EACLA,cACzB,EAAKO,MAAMD,uBAAuBP,EAAiBC,GACnD,EAAKK,SAAS,CAAEH,YAAY,EAAOC,kBAAkB,K,EAGtDK,qBAAuB,WACJ,EAAKX,MAAfI,OAEa,EAAKM,MAAME,UAAxBC,SAEcC,OAAS,GAC9B,EAAKC,sBAAsB,EAAKf,MAAMI,MAAQ,I,EAIhDY,qBAAuB,WAGT,GAFK,EAAKhB,MAAfI,OAGP,EAAKW,sBAAsB,EAAKf,MAAMI,MAAQ,I,EAIhDW,sBAAwB,SAACX,GAAW,IAC3BS,EAAa,EAAKH,MAAME,UAAxBC,SAER,EAAKL,SAAS,CACbJ,MAAOA,EACPH,gBAAiBY,EAAST,GAAO,GACjCF,gBAAiBW,EAAST,GAAO,GACjCD,cAAeU,EAAST,GAAO,GAC/BC,YAAY,K,kEAvCbY,KAAKF,sBAAsB,K,+BA2ClB,IAAD,EAQJE,KAAKjB,MANRG,EAFO,EAEPA,cACAF,EAHO,EAGPA,gBACAC,EAJO,EAIPA,gBACAE,EALO,EAKPA,MACAC,EANO,EAMPA,WACAC,EAPO,EAOPA,iBAEOO,EAAaI,KAAKP,MAAME,UAAxBC,SACR,OACC,cAAC,WAAD,UACEP,EACA,kEAEA,sBAAKY,UAAU,eAAf,UACC,sBAAKA,UAAU,oBAAf,UACC,cAAC,IAAD,CACCA,UAAoB,GAATd,EAAa,kBAAoB,aAC5Ce,QAASF,KAAKD,qBACdI,KAAMC,MAEP,cAAC,IAAD,CACCH,UACCd,GAASS,EAASC,OAAS,EACxB,mBACA,cAEJK,QAASF,KAAKN,qBACdS,KAAME,SAGR,sBAAKJ,UAAU,gBAAf,UACC,kDADD,IAC2BjB,KAE3B,sBAAKiB,UAAU,gBAAf,UACC,0CADD,IACmBhB,KAElBG,EACA,sBAAKa,UAAU,gBAAf,UACC,wCADD,IACiBf,KAGjB,GAGD,cAACoB,EAAA,EAAD,CACCC,QAAQ,kCACRL,QAASF,KAAKV,iBAFf,oBAMA,8BACEF,EACA,cAACkB,EAAA,EAAD,CACCC,QAAQ,qCACRL,QAASF,KAAKR,uBAFf,sCAOA,c,GAnHoBgB,cCoGbC,G,kNAzGd1B,MAAQ,CAAEY,UAAW,GAAIe,UAAU,G,EAOnCC,gBAAkB,WAAO,IAAD,EACU,EAAKlB,MAAMmB,MAApCC,EADe,EACfA,KAAMC,EADS,EACTA,KADS,EACHC,SACpB,EAAKtB,MAAMuB,WAAWH,EAAKI,SAC3B,EAAKxB,MAAMyB,eAAeJ,EAAKG,U,EAGhCzB,uBAAyB,SAAC2B,EAAaC,GAAe,IAAD,EACnB,EAAK3B,MAAMmB,MAApCC,EAD4C,EAC5CA,KAAMC,EADsC,EACtCA,KAAMC,EADgC,EAChCA,SACpB,EAAKtB,MAAM4B,wBAAwBN,EAASE,QAASE,EAAaC,GAClE,EAAKE,kBACJT,EAAKI,QACLH,EAAKG,QACLF,EAASE,QACTE,EACAC,I,kEAlBDpB,KAAKuB,mBACLvB,KAAKW,oB,iFAqBkBE,EAAMC,EAAMC,EAAUI,EAAaC,G,gFAC1DI,QAAQC,IAAI,gCACNC,EAAWC,wC,SAEYC,MAAMF,EAAQ,kBAAuBZ,EAAM,CACvEe,OAAQ,WACNC,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAK,CAAEf,QAAS,gB,qBAE/BgB,EAAO,CACZC,KAAMrB,EACNsB,SAAUrB,EACVsB,aAAc,CACbC,aAActB,EACdI,YAAaA,EACbC,UAAWA,I,SAGcQ,MAAMF,EAAQ,kBAAsB,CAC9DG,OAAQ,OACRS,QAAS,CACRC,OAAQ,mBACR,eAAgB,oBAEjBN,KAAMO,KAAKC,UAAUR,KACnBH,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAK,CAAEf,QAAS,gB,iSAIrCO,QAAQC,IAAI,+BACKE,wC,SACMC,MAAMF,kDAA0B1B,KAAKP,MAAMmB,MAAMG,SAASE,SAC/Ea,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAK,CAAEf,QAAS,gBAClCa,MACA,SAACY,GAMA,OALA,EAAKnD,SAAS,CACbI,UAAW6C,KAAKG,MAAMH,KAAKC,UAAUC,IACrChC,UAAU,IAEXkC,aAAaC,QAAQ,QAASL,KAAKG,MAAMH,KAAKC,UAAUC,KACjDA,EAAOI,UAKf,SAACC,GAMA,OALAvB,QAAQC,IAAI,SACZ,EAAKlC,SAAS,CACbwD,UAGMA,EAAMD,U,cApBVlD,E,gBAwBWA,E,cAAboD,E,yBAEGA,G,qIAEE,IAAD,EACwBhD,KAAKjB,MAA7BY,EADA,EACAA,UAAWe,EADX,EACWA,SACnB,OACC,cAAC,WAAD,UACEA,EACA,qBAAKT,UAAU,wBAAf,SACC,cAAC,EAAD,CACCN,UAAWA,EACXH,uBAAwBQ,KAAKR,uBAC7B2C,SAAUnC,KAAKP,MAAMmB,MAAME,KAAKG,YAIlC,cAACgC,EAAA,EAAD,CAASC,UAAU,SAAS3C,QAAQ,OAAO4C,KAAK,SAAhD,SACC,sBAAMlD,UAAU,UAAhB,gC,GAlG0BO,cC2FjB4C,G,MC/FkB5C,Y,4MDOhCzB,MAAQ,G,uDAGP,OACC,cAAC,WAAD,UACC,qBAAKkB,UAAU,kBAAf,SACC,cAAC,IAAD,CACCoD,MAAO,QACPzC,MAAO,CACN,CACC0C,GAAI,IACJrC,QAAS,2BACTsC,QAAS,QAEV,CACCD,GAAI,OACJpB,MAAM,EACNqB,QAAS,KAEV,CACCD,GAAI,IACJrC,QAAS,kDACTsC,QAAS,QAEV,CACCD,GAAI,OACJpB,MAAM,EACNqB,QAAS,KAEV,CACCD,GAAI,IACJrC,QAAS,gBACTsC,QAAS,KAGV,CACCD,GAAI,IACJrC,QAAS,6DACTsC,QAAS,YAEV,CACCD,GAAI,WACJpB,MAAM,EACNqB,QAAS,sBAEV,CACCD,GAAI,qBACJE,UACC,cAAC,EAAD,CACCC,gBAAiBzD,KAAKP,MAAMgE,gBAC5BzC,WAAYhB,KAAKP,MAAMuB,WACvBE,eAAgBlB,KAAKP,MAAMyB,eAC3BG,wBAAyBrB,KAAKP,MAAM4B,0BAGtCkC,QAAS,MAEV,CACCD,GAAI,KACJrC,QAAS,gCACTyC,MAAO,KACPH,QAAS,iBAEV,CACCD,GAAI,gBACJK,QAAS,CACR,CAAEC,MAAO,EAAGC,MAAO,yBAA0BN,QAAS,oBACtD,CAAEK,MAAO,EAAGC,MAAO,gBAAiBN,QAAS,UAG/C,CACCD,GAAI,mBACJrC,QAAS,gDACTsC,QAAS,YAEV,CACCD,GAAI,OACJrC,QAAS,gCACT6C,KAAK,c,GA/EatD,cEoBXuD,G,wNAvBdhF,MAAQ,G,uDAEE,IAAD,EACiCiB,KAAKP,MAAtCoB,EADA,EACAA,KAAMsB,EADN,EACMA,SAAUC,EADhB,EACgBA,aACxB,OACC,cAAC,WAAD,UACC,sBAAKnC,UAAU,iCAAf,UACC,8BACC,6CAED,yCAAYY,KACZ,8CAAiBsB,KACjB,6CACYC,EAAarB,SAAWqB,EAAarB,SAASE,QAAU,MAEpE,yDAA4BmB,EAAeA,EAAajB,YAAc,MACtE,uDAA0BiB,EAAeA,EAAahB,UAAY,e,GAjB/CZ,cCqDTwD,G,kNAjDdjF,MAAQ,G,uDAEP,OACC,cAAC,WAAD,UACC,sBAAKkB,UAAU,2CAAf,UACC,cAAC,IAAD,CACCA,UAAU,iBACVC,QAASF,KAAKiE,iBACd9D,KAAM+D,MAEP,8BACC,wDAED,8BACC,mBAAGC,KAAK,2CAAR,wDAID,8BACC,mBAAGA,KAAK,sCAAR,mDAID,8BACC,mBAAGA,KAAK,qDAAR,kEAID,8BACC,mBAAGA,KAAK,wCAAR,qDAID,8BACC,mBAAGA,KAAK,qDAAR,kEAID,8BACC,mBAAGA,KAAK,qDAAR,2E,GAxC4B3D,cC0InB4D,G,kNAvIdrF,MAAQ,CACPsF,aAAa,EACbC,aAAa,EACbC,aAAa,EACbC,YAAa,I,EAQdC,kBAAoB,WACnB,EAAKlF,SAAS,CAAE8E,aAAc,EAAKtF,MAAMsF,e,EAG1CK,kBAAoB,WACnB,EAAKnF,SAAS,CAAE+E,aAAc,EAAKvF,MAAMuF,e,EAG1CL,iBAAmB,WAClB,EAAKU,iBAAiB,WACtB,EAAKA,iBAAiB,WACtB,EAAKpF,SAAS,CAACgF,aAAa,EAAMC,YAAa,IAAII,Q,kEAfnD5E,KAAK2E,iBAAiB,WACtB3E,KAAK2E,iBAAiB,a,gFAiBAxC,G,uFACtBX,QAAQC,IAAI,+BACKE,wC,SACMC,MAAMF,uDAA+BS,GAC1DL,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAK,CAAEf,QAAS,gBAClCa,MACA,SAACY,GACA,GAAsB,IAAlBA,EAAO7C,OAAe,CAAC,IAAD,EACuB6C,EAAO,GAA9CN,EADgB,EAChBA,aAAcF,EADE,EACFA,KAAMC,EADJ,EACIA,SAAU0C,EADd,EACcA,KACzB,YAAb1C,EACG,EAAK5C,SAAS,CACduF,QAAS,CACR5C,KAAMA,EACNC,SAAUA,EACV0C,KAAMA,EACNzC,aAAcA,KAGf,EAAK7C,SAAS,CACdwF,QAAS,CACR7C,KAAMA,EACNC,SAAUA,EACV0C,KAAMA,EACNzC,aAAcA,SASrB,SAACW,GAMA,OALAvB,QAAQC,IAAI,SACZ,EAAKlC,SAAS,CACbwD,UAGMA,EAAMD,U,cAnCVlD,E,gBAuCWA,E,cAAboD,E,yBAEGA,G,iIAGE,IAAD,EACyEhD,KAAKjB,MAA9EsF,EADA,EACAA,YAAaC,EADb,EACaA,YAAaS,EAD1B,EAC0BA,QAASD,EADnC,EACmCA,QAASP,EAD5C,EAC4CA,YAAaC,EADzD,EACyDA,YAEjE,OACC,cAAC,WAAD,UACC,sBAAKvE,UAAU,qCAAf,UACC,cAAC,IAAD,CACCA,UAAU,iBACVC,QAASF,KAAKiE,iBACd9D,KAAM+D,MAGP,gCACC,2DAAkC,OAElCG,GAAeU,EACf,sBAAK9E,UAAU,sBAAf,UACC,yCAAY8E,EAAQ7C,QACpB,yCAAY6C,EAAQF,QACpB,2CAAcE,EAAQ3C,aAAaC,gBACnC,sCAAS0C,EAAQ3C,aAAajB,eAC9B,sCAAS4D,EAAQ3C,aAAahB,gBAG/B,GAED,cAACd,EAAA,EAAD,CACCC,QAAQ,iCACRL,QAASF,KAAKyE,kBAFf,kBAOA,8BACC,8DAGAH,GAAeQ,EACf,sBAAK7E,UAAU,sBAAf,UACC,yCAAY6E,EAAQ5C,QACpB,yCAAY4C,EAAQD,QACpB,2CAAcC,EAAQ1C,aAAaC,gBACnC,sCAASyC,EAAQ1C,aAAajB,eAC9B,sCAAS2D,EAAQ1C,aAAahB,gBAG/B,GAGD,cAACd,EAAA,EAAD,CACCC,QAAQ,iCACRL,QAASF,KAAK0E,kBAFf,kBAMCH,EAAc,sBAAKtE,UAAU,kBAAf,uBAA4CuE,EAAYQ,cAAoB,Y,GAjIpExE,cCmDbyE,E,4MAhDdlG,MAAQ,CAAEY,UAAW,GACpBkB,KAAM,GACNsB,SAAU,GACVC,aAAc,I,EAGZpB,WAAa,SAACH,GACV,EAAKtB,SAAS,CAAEsB,KAAMA,K,EAG1BK,eAAiB,SAACiB,GACd,EAAK5C,SAAS,CAAE4C,SAAUA,K,EAG9Bd,wBAA0B,SAACN,EAAUI,EAAaC,GAC9C,EAAK7B,SAAS,CAAE6C,aAAe,CAAErB,WAAUI,cAAaC,gB,EAG/DqC,gBAAkB,SAAC9D,GAClB,EAAKJ,SAAS,CAAEI,UAAWA,K,uDAIlB,IAAD,EAC+BK,KAAKjB,MAArC8B,EADC,EACDA,KAAMsB,EADL,EACKA,SAAUC,EADf,EACeA,aACvB,OACC,cAAC,WAAD,UACC,sBAAKnC,UAAU,eAAf,UACC,cAAC,EAAD,CACCwD,gBAAiBzD,KAAKyD,gBACtBzC,WAAYhB,KAAKgB,WACjBE,eAAgBlB,KAAKkB,eACrBG,wBAAyBrB,KAAKqB,0BAC/B,gCACA,cAAC,EAAD,IACA,cAAC,EAAD,CACCR,KAAMA,EACNsB,SAAUA,EACVC,aAAcA,IAEf,cAAC,EAAD,gB,GAzCc5B,aCGJ0E,MAVf,WACC,OACC,qBAAKjF,UAAU,MAAf,SACC,wBAAQA,UAAU,aAAlB,SACC,cAAC,EAAD,SCIWkF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvD,MAAK,YAAkD,IAA/CwD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8576d5fb.chunk.js","sourcesContent":["import { Fragment } from 'react';\n\nimport React, { Component } from 'react';\n\nimport Button from 'react-bootstrap/Button';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\n\nimport './ShowQueryCard.css';\n\nclass ShowQueryCard extends Component {\n\tstate = {\n\t\tcurrentCosinSim: '',\n\t\tcurrentQuestion: '',\n\t\tcurrentAnswer: '',\n\t\tindex: 0,\n\t\tshowAnswer: false,\n\t\tansweredQuestion: false,\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.updateCurrentQuestion(0);\n\t}\n\n\ttoggleShowAnswer = () => {\n\t\tthis.setState({ showAnswer: !this.state.showAnswer });\n\t};\n\n\thandleAnsweredQuestion = () => {\n\t\tconst { currentQuestion, currentAnswer } = this.state;\n\t\tthis.props.handleAnsweredQuestion(currentQuestion, currentAnswer);\n\t\tthis.setState({ showAnswer: false, answeredQuestion: true });\n\t};\n\n\thandleIndexIncrement = () => {\n\t\tconst { index } = this.state;\n\n\t\tconst { response } = this.props.questions;\n\n\t\tif (index != response.length - 1) {\n\t\t\tthis.updateCurrentQuestion(this.state.index + 1);\n\t\t}\n\t};\n\n\thandleIndexDecrement = () => {\n\t\tconst { index } = this.state;\n\n\t\tif (index != 0) {\n\t\t\tthis.updateCurrentQuestion(this.state.index - 1);\n\t\t}\n\t};\n\n\tupdateCurrentQuestion = (index) => {\n\t\tconst { response } = this.props.questions;\n\n\t\tthis.setState({\n\t\t\tindex: index,\n\t\t\tcurrentCosinSim: response[index][0],\n\t\t\tcurrentQuestion: response[index][1],\n\t\t\tcurrentAnswer: response[index][2],\n\t\t\tshowAnswer: false,\n\t\t});\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tcurrentAnswer,\n\t\t\tcurrentCosinSim,\n\t\t\tcurrentQuestion,\n\t\t\tindex,\n\t\t\tshowAnswer,\n\t\t\tansweredQuestion,\n\t\t} = this.state;\n\t\tconst { response } = this.props.questions;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{answeredQuestion ? (\n\t\t\t\t\t<div>I'm happy to have assisted you!</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"card-wrapper\">\n\t\t\t\t\t\t<div className=\"direction-wrapper\">\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tclassName={index == 0 ? 'grey left-arrow' : 'left-arrow'}\n\t\t\t\t\t\t\t\tonClick={this.handleIndexDecrement}\n\t\t\t\t\t\t\t\ticon={faChevronLeft}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\tindex == response.length - 1\n\t\t\t\t\t\t\t\t\t\t? 'grey right-arrow'\n\t\t\t\t\t\t\t\t\t\t: 'right-arrow'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tonClick={this.handleIndexIncrement}\n\t\t\t\t\t\t\t\ticon={faChevronRight}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"text-response\">\n\t\t\t\t\t\t\t<b>Cosin Similarity:</b> {currentCosinSim}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"text-response\">\n\t\t\t\t\t\t\t<b>Question:</b> {currentQuestion}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{showAnswer ? (\n\t\t\t\t\t\t\t<div className=\"text-response\">\n\t\t\t\t\t\t\t\t<b>Answer:</b> {currentAnswer}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t''\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant=\"outline-dark show-answer-button\"\n\t\t\t\t\t\t\tonClick={this.toggleShowAnswer}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAnswer\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{showAnswer ? (\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"outline-success show-answer-button\"\n\t\t\t\t\t\t\t\t\tonClick={this.handleAnsweredQuestion}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tThis Answers My Question\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t''\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default ShowQueryCard;\n","import React, { Component, Fragment } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport ShowQueryCard from '../../ShowQueryCard/ShowQueryCard';\n\nimport './QuestionComponent.css';\n\nclass QuestionComponent extends Component {\n\tstate = { questions: [], isLoaded: false };\n\n\tcomponentDidMount() {\n\t\tthis.getIntentsFromDB();\n\t\tthis.updateUserModel();\n\t}\n\n\tupdateUserModel = () => {\n\t\tconst { name, type, question } = this.props.steps;\n\t\tthis.props.handleName(name.message);\n\t\tthis.props.handleUserType(type.message);\n\t};\n\n\thandleAnsweredQuestion = (faqQuestion, faqAnswer) => {\n\t\tconst { name, type, question } = this.props.steps;\n\t\tthis.props.handleQuestionsAnswered(question.message, faqQuestion, faqAnswer);\n\t\tthis.postRecentlyAsked(\n\t\t\tname.message,\n\t\t\ttype.message,\n\t\t\tquestion.message,\n\t\t\tfaqQuestion,\n\t\t\tfaqAnswer\n\t\t);\n\t};\n\n\tasync postRecentlyAsked(name, type, question, faqQuestion, faqAnswer) {\n\t\tconsole.log('HTTP CALL: postRecentlyAsked');\n\t\tconst endpoint = process.env.REACT_APP_API_ENDPOINT || 'http://localhost:5000';\n\n\t\tconst responseDelete = await fetch(endpoint + `/recentlyAsked/` + type, {\n\t\t\tmethod: 'DELETE',\n\t\t}).then((res) => res.json({ message: 'Recieved' }));\n\n\t\tconst body = {\n\t\t\tuser: name,\n\t\t\tuserType: type,\n\t\t\tquestionData: {\n\t\t\t\tuserQuestion: question,\n\t\t\t\tfaqQuestion: faqQuestion,\n\t\t\t\tfaqAnswer: faqAnswer,\n\t\t\t},\n\t\t};\n\t\tconst responsePost = await fetch(endpoint + `/recentlyAsked/`, {\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(body),\n\t\t}).then((res) => res.json({ message: 'Recieved' }));\n\t}\n\n\tasync getIntentsFromDB() {\n\t\tconsole.log('HTTP CALL: getQuestionQuery');\n\t\tconst endpoint = process.env.REACT_APP_API_ENDPOINT || 'http://localhost:5000';\n\t\tconst response = await fetch(endpoint + `/question/` + this.props.steps.question.message)\n\t\t\t.then((res) => res.json({ message: 'Recieved' }))\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tquestions: JSON.parse(JSON.stringify(result)),\n\t\t\t\t\t\tisLoaded: true,\n\t\t\t\t\t});\n\t\t\t\t\tlocalStorage.setItem('query', JSON.parse(JSON.stringify(result)));\n\t\t\t\t\treturn result.status;\n\t\t\t\t},\n\t\t\t\t// Note: it's important to handle errors here\n\t\t\t\t// instead of a catch() block so that we don't swallow\n\t\t\t\t// exceptions from actual bugs in components.\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log('error');\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn error.status;\n\t\t\t\t}\n\t\t\t);\n\n\t\tlet data = await response;\n\n\t\treturn data;\n\t}\n\trender() {\n\t\tconst { questions, isLoaded } = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t{isLoaded ? (\n\t\t\t\t\t<div className=\"dark normal-font-size\">\n\t\t\t\t\t\t<ShowQueryCard\n\t\t\t\t\t\t\tquestions={questions}\n\t\t\t\t\t\t\thandleAnsweredQuestion={this.handleAnsweredQuestion}\n\t\t\t\t\t\t\tuserType={this.props.steps.type.message}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<Spinner animation=\"border\" variant=\"dark\" role=\"status\">\n\t\t\t\t\t\t<span className=\"sr-only\">Loading...</span>\n\t\t\t\t\t</Spinner>\n\t\t\t\t)}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default QuestionComponent;\n","import ChatBot from 'react-simple-chatbot';\n\nimport React, { Component, Fragment } from 'react';\nimport QuestionComponent from './QuestionComponent/QuestionComponent';\n\nimport './ChatbotComp.css';\nimport TriggerYesQuestion from '../../TriggerComponents/TriggerYesQuestion';\n\nclass ChatBotComp extends Component {\n\tstate = {};\n\trender() {\n\t\t{}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"chatbot-wrapper\">\n\t\t\t\t\t<ChatBot\n\t\t\t\t\t\twidth={'500px'}\n\t\t\t\t\t\tsteps={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: '1',\n\t\t\t\t\t\t\t\tmessage: \"Hello, what's your name?\",\n\t\t\t\t\t\t\t\ttrigger: 'name',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'name',\n\t\t\t\t\t\t\t\tuser: true,\n\t\t\t\t\t\t\t\ttrigger: '3',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: '3',\n\t\t\t\t\t\t\t\tmessage: 'Hi {previousValue}, are you faculty or student?',\n\t\t\t\t\t\t\t\ttrigger: 'type',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'type',\n\t\t\t\t\t\t\t\tuser: true,\n\t\t\t\t\t\t\t\ttrigger: '4',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: '4',\n\t\t\t\t\t\t\t\tmessage: 'Good to know!',\n\t\t\t\t\t\t\t\ttrigger: '5',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: '5',\n\t\t\t\t\t\t\t\tmessage: 'Ask me any question about UTD (ex: How do I apply to UTD?)',\n\t\t\t\t\t\t\t\ttrigger: 'question',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'question',\n\t\t\t\t\t\t\t\tuser: true,\n\t\t\t\t\t\t\t\ttrigger: 'question_component',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'question_component',\n\t\t\t\t\t\t\t\tcomponent: (\n\t\t\t\t\t\t\t\t\t<QuestionComponent\n\t\t\t\t\t\t\t\t\t\tupdateQuestions={this.props.updateQuestions}\n\t\t\t\t\t\t\t\t\t\thandleName={this.props.handleName} \n\t\t\t\t\t\t\t\t\t\thandleUserType={this.props.handleUserType} \n\t\t\t\t\t\t\t\t\t\thandleQuestionsAnswered={this.props.handleQuestionsAnswered}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\ttrigger: '10'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: '10',\n\t\t\t\t\t\t\t\tmessage: 'Do you have another question?',\n\t\t\t\t\t\t\t\tdelay: 15000,\n\t\t\t\t\t\t\t\ttrigger: 'loop_question'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'loop_question',\n\t\t\t\t\t\t\t\toptions: [\n\t\t\t\t\t\t\t\t\t{ value: 1, label: \"Yes, another question.\", trigger: 'another question'},\n\t\t\t\t\t\t\t\t\t{ value: 2, label: \"No, I'm good.\", trigger: 'exit'}\n\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'another question',\n\t\t\t\t\t\t\t\tmessage: 'No problem! What other question may you have?',\n\t\t\t\t\t\t\t\ttrigger: 'question',\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tid: 'exit',\n\t\t\t\t\t\t\t\tmessage: 'Thanks for using UTD Chatbot!',\n\t\t\t\t\t\t\t\tend: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default ChatBotComp;\n","import React, { Component } from 'react';\n\nclass TriggerYesQuestion extends Component {\n\tstate = {};\n\n\tcomponentDidMount() {\n\t\tthis.props.triggerNextStep();\n\t}\n\n\trender() {\n\t\treturn <div></div>;\n\t}\n}\n\nexport default TriggerYesQuestion;\n","import React, { Component, Fragment } from 'react';\n\nimport './UserModel.css';\n\nclass UserModel extends Component {\n\tstate = {};\n\n\trender() {\n\t\tconst { name, userType, questionData } = this.props;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"user-model-wrapper card-border\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>USER MODEL</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>Name: {name}</div>\n\t\t\t\t\t<div>User Type: {userType}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\tQuestion: {questionData.question ? questionData.question.message : ''}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>Matched FAQ Question: {questionData ? questionData.faqQuestion : ''}</div>\n\t\t\t\t\t<div>Matched FAQ Answer: {questionData ? questionData.faqAnswer : ''}</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default UserModel;\n","import React, { Component, Fragment } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './CurrentScrapedSites.css';\n\nclass CurrentScrapedSites extends Component {\n\tstate = {};\n\trender() {\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"current-scraped-sites-wraper card-border\">\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName=\"refresh-button\"\n\t\t\t\t\t\tonClick={this.refreshComponent}\n\t\t\t\t\t\ticon={faSyncAlt}\n\t\t\t\t\t/>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>Current Scraped Sites</b>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://utdallas.edu/covid/response/faq/\">\n\t\t\t\t\t\t\thttps://utdallas.edu/covid/response/faq/\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://registrar.utdallas.edu/faq/\">\n\t\t\t\t\t\t\thttps://registrar.utdallas.edu/faq/\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://www.utdallas.edu/counseling/faq/index.html\">\n\t\t\t\t\t\t\thttps://www.utdallas.edu/counseling/faq/index.html\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://www.utdallas.edu/housing/faq/\">\n\t\t\t\t\t\t\thttps://www.utdallas.edu/housing/faq/\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://www.utdallas.edu/services/transit/parkfaq/\">\n\t\t\t\t\t\t\thttps://www.utdallas.edu/services/transit/parkfaq/\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href=\"https://cs.utdallas.edu/admissions/admissions-faq/\">\n\t\t\t\t\t\t\thttps://cs.utdallas.edu/admissions/admissions-faq/\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default CurrentScrapedSites;\n","import { faLeaf } from '@fortawesome/free-solid-svg-icons';\nimport React, { Component, Fragment } from 'react';\n\nimport { Button } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport './RecentlyAsked.css';\n\nclass RecentlyAsked extends Component {\n\tstate = {\n\t\tshowStudent: false,\n\t\tshowFaculty: false,\n\t\tshowRefresh: false,\n\t\trefreshTime: ''\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.getRecentlyAsked('student');\n\t\tthis.getRecentlyAsked('faculty');\n\t}\n\n\ttoggleShowStudent = () => {\n\t\tthis.setState({ showStudent: !this.state.showStudent });\n\t};\n\n\ttoggleShowFaculty = () => {\n\t\tthis.setState({ showFaculty: !this.state.showFaculty });\n\t};\n\n\trefreshComponent = () => {\n\t\tthis.getRecentlyAsked('faculty');\n\t\tthis.getRecentlyAsked('student');\n\t\tthis.setState({showRefresh: true, refreshTime: new Date()})\n\t};\n\n\tasync getRecentlyAsked(userType) {\n\t\tconsole.log('HTTP CALL: getRecentlyAsked');\n\t\tconst endpoint = process.env.REACT_APP_API_ENDPOINT || 'http://localhost:5000';\n\t\tconst response = await fetch(endpoint + `/recentlyAsked/` + userType)\n\t\t\t.then((res) => res.json({ message: 'Recieved' }))\n\t\t\t.then(\n\t\t\t\t(result) => {\n\t\t\t\t\tif (result.length !== 0)  {\n\t\t\t\t\t\t\tconst { questionData, user, userType, date } = result[0];\n\t\t\t\t\t\t\tuserType === 'FACULTY'\n\t\t\t\t\t\t\t\t? this.setState({\n\t\t\t\t\t\t\t\t\t\tfaculty: {\n\t\t\t\t\t\t\t\t\t\t\tuser: user,\n\t\t\t\t\t\t\t\t\t\t\tuserType: userType,\n\t\t\t\t\t\t\t\t\t\t\tdate: date,\n\t\t\t\t\t\t\t\t\t\t\tquestionData: questionData,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t  })\n\t\t\t\t\t\t\t\t: this.setState({\n\t\t\t\t\t\t\t\t\t\tstudent: {\n\t\t\t\t\t\t\t\t\t\t\tuser: user,\n\t\t\t\t\t\t\t\t\t\t\tuserType: userType,\n\t\t\t\t\t\t\t\t\t\t\tdate: date,\n\t\t\t\t\t\t\t\t\t\t\tquestionData: questionData,\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t  });\n\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t// Note: it's important to handle errors here\n\t\t\t\t// instead of a catch() block so that we don't swallow\n\t\t\t\t// exceptions from actual bugs in components.\n\t\t\t\t(error) => {\n\t\t\t\t\tconsole.log('error');\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\terror,\n\t\t\t\t\t});\n\n\t\t\t\t\treturn error.status;\n\t\t\t\t}\n\t\t\t);\n\n\t\tlet data = await response;\n\n\t\treturn data;\n\t}\n\n\trender() {\n\t\tconst { showStudent, showFaculty, student, faculty, showRefresh, refreshTime } = this.state;\n\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"recently-asked-wrapper card-border\">\n\t\t\t\t\t<FontAwesomeIcon\n\t\t\t\t\t\tclassName=\"refresh-button\"\n\t\t\t\t\t\tonClick={this.refreshComponent}\n\t\t\t\t\t\ticon={faSyncAlt}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>Recently asked by student:</b>{' '}\n\t\t\t\t\t</div>\n\t\t\t\t\t{showStudent && student? (\n\t\t\t\t\t\t<div className=\"show-recent-wrapper\">\n\t\t\t\t\t\t\t<div>Name: {student.user}</div>\n\t\t\t\t\t\t\t<div>Date: {student.date}</div>\n\t\t\t\t\t\t\t<div>user_Q: {student.questionData.userQuestion}</div>\n\t\t\t\t\t\t\t<div>Q: {student.questionData.faqQuestion}</div>\n\t\t\t\t\t\t\t<div>A: {student.questionData.faqAnswer}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-light normal-text-size\"\n\t\t\t\t\t\tonClick={this.toggleShowStudent}\n\t\t\t\t\t>\n\t\t\t\t\t\tSHOW\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<b>Recently asked by faculty: </b>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{showFaculty && faculty ? (\n\t\t\t\t\t\t<div className=\"show-recent-wrapper\">\n\t\t\t\t\t\t\t<div>Name: {faculty.user}</div>\n\t\t\t\t\t\t\t<div>Date: {faculty.date}</div>\n\t\t\t\t\t\t\t<div>user_Q: {faculty.questionData.userQuestion}</div>\n\t\t\t\t\t\t\t<div>Q: {faculty.questionData.faqQuestion}</div>\n\t\t\t\t\t\t\t<div>A: {faculty.questionData.faqAnswer}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t''\n\t\t\t\t\t)}\n\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"outline-light normal-text-size\"\n\t\t\t\t\t\tonClick={this.toggleShowFaculty}\n\t\t\t\t\t>\n\t\t\t\t\t\tSHOW\n\t\t\t\t\t</Button>\n\t\t\t\t\t{showRefresh ? <div className=\"refresh-message\">Refreshed {refreshTime.toString()}</div> : ''}\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default RecentlyAsked;\n","import React, { Component, Fragment } from 'react';\n\nimport ChatbotComp from './ChatbotComp/ChatbotComp';\nimport ShowQueryCard from './ShowQueryCard/ShowQueryCard';\nimport { Spinner } from 'react-bootstrap';\n\nimport './Home.css';\nimport UserModel from './UserModel/UserModel';\nimport CurrentScrapedSites from './CurrentScrapedSites/CurrentScrapedSites';\nimport RecentlyAsked from './RecentlyAsked/RecentlyAsked';\n\nclass Home extends Component {\n\tstate = { questions: [],\n\t\tname: '',\n\t\tuserType: '',\n\t\tquestionData: {},\n    };\n\n    handleName = (name) => {\n        this.setState({ name: name})\n    }\n\n    handleUserType = (userType) => {\n        this.setState({ userType: userType })\n    }\n\n    handleQuestionsAnswered = (question, faqQuestion, faqAnswer) => {\n        this.setState({ questionData : { question, faqQuestion, faqAnswer} })\n    }\n\n\tupdateQuestions = (questions) => {\n\t\tthis.setState({ questions: questions });\n\t};\n\n\t\n\trender() {\n\t\tconst {name, userType, questionData} = this.state;\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"home-wrapper\">\n\t\t\t\t\t<ChatbotComp\n\t\t\t\t\t\tupdateQuestions={this.updateQuestions} \n\t\t\t\t\t\thandleName={this.handleName} \n\t\t\t\t\t\thandleUserType={this.handleUserType} \n\t\t\t\t\t\thandleQuestionsAnswered={this.handleQuestionsAnswered}/>\n\t\t\t\t\t<div>\n\t\t\t\t\t<RecentlyAsked />\n\t\t\t\t\t<UserModel\n\t\t\t\t\t\tname={name}\n\t\t\t\t\t\tuserType={userType}\n\t\t\t\t\t\tquestionData={questionData}\n\t\t\t\t\t/>\n\t\t\t\t\t<CurrentScrapedSites/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Home;\n","import './App.css';\n\nimport Home from './components/Home/Home';\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<Home />\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}